apiVersion: v1
kind: ServiceAccount
metadata:
  name: leader-election
  labels:
    app: leader-election

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: leader-election
  labels:
    app: leader-election
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: leader-election
  labels:
    app: leader-election
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: leader-election
subjects:
  - name: leader-election
    namespace: default
    kind: ServiceAccount

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transcriber-deployment
spec:
  selector:
    matchLabels:
      app: transcriber
  replicas: 2
  template:
    metadata:
      labels:
        app: transcriber
        dummy: test6
    spec:
      serviceAccountName: leader-election
      containers:
        - name: transcriber
          image: eu.gcr.io/jtgcp-subtitles/subtitling-transcribe:latest
          env:
            - name: PODNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
#          ports:
#            - containerPort: 8080
#          readinessProbe:
#            exec:
#              command:
#                - /bin/sh
#                - -c
#                - curl -v --silent http://localhost:4040/ 2>&1 | grep $PODNAME
#            initialDelaySeconds: 20
#            periodSeconds: 3
        - name: leader-election
          image: gcr.io/google-containers/leader-elector:0.5
          args:
            - --election=election2
            - --http=0.0.0.0:4040
            - --ttl=2s
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 4040

#---
#apiVersion: policy/v1beta1
#kind: PodDisruptionBudget
#metadata:
#  name: zk-pdb
#spec:
#  minAvailable: 1
#  selector:
#    matchLabels:
#      app: transcriber
#
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: transcriber-service
#spec:
#  selector:
#    app: transcriber
#  ports:
#    - protocol: TCP
#      port: 80
#      targetPort: 8080
#  type: LoadBalancer